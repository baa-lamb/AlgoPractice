/*
На перемене в школьной столовой образовалась очередь из n человек, в которой стоят мальчики и девочки. 
Изначально ребята встали в таком порядке, в котором они забежали в столовую. 
Однако через некоторое время мальчикам стало неловко, что они стоят в очереди перед девочками,
и они стали каждую секунду пропускать девочек вперед.

Опишем процесс более точно. Пусть позиции в очереди последовательно пронумерованы целыми числами от 1 до n, 
причем тот, кто стоит на позиции номер 1 обслуживается первым. Тогда, если в момент времени x на i-ой позиции 
стоит мальчик, а на (i + 1)-ой — девочка, то в момент времени x + 1 на i-ой позиции будет находиться девочка, 
а на (i + 1)-ой — мальчик. Моменты времени заданы в секундах.

Вам задано расположение ребят в начальный момент времени, определите, как будет выглядеть очередь через t секунд.

Входные данные
В первой строке заданы два целых числа n и t (1 ≤ n, t ≤ 50), 
обозначающие количество ребят в очереди и время, спустя которое требуется определить, как будет выглядеть очередь.
В следующей строке задана строка s, обозначающая начальную расстановку школьников.
Если на i-ой позиции в очереди стоит мальчик, то i-ый символ строки s равен «B», иначе i-ый символ равен «G».

Выходные данные
Выведите строку a, обозначающую расположение ребят в очереди спустя t секунд. 
Если на i-ой позиции через заданное время будет стоять мальчик, то i-ый символ a должен быть равен «B», иначе он должен быть равен «G».

*/

#include <iostream>
#include <vector>
using namespace std;

int main() {
	int n = 0;
	int t = 0;

	cin >> n;
	cin >> t;

	string s;
	cin >> s;

	for (int i = 0; i < t; i++) {
		vector<bool> visited(n, false);
		for (int j = 0; j < n-1; j++) {
			if (s[j] == 'B' && s[j + 1] == 'G' && !visited[j] && !visited[j + 1]) {
				s[j] = 'G';
				s[j + 1] = 'B';
				visited[j] = true;
				visited[j + 1] = true;
			}
		}
	}

	cout << s;
	return 0;
}
